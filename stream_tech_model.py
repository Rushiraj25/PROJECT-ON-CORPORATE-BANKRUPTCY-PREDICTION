# -*- coding: utf-8 -*-
"""Stream_tech_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_bo23hiVK2N6yPai4aDpI6yRa-EwCbxi
"""

pip install summa

pip install streamlit

!pip install ipykernel>=5.1.2
!pip install pydeck

from summa import summarizer
import streamlit as st
import numpy as np
import pandas as pd
import pickle

pickle_in=open("/content/drive/MyDrive/data/Pickle_LGBM_Model.pkl","rb")
classifier=pickle.load(pickle_in)


def predict_note(np,tl,ebit,bookval,sales,gp,dep,intrest,dp_tl,ta_tl,gp_sal,oa_ta,np_tl,log,gp_int,pro_sales,ts_ta,cc,ca_inv_re,ca_inv,EBITDA,stl,sa_co_ps,tc_ts):
     prediction=classifier.predict([[np,tl,ebit,bookval,sales,gp,dep,intrest,dp_tl,ta_tl,gp_sal,oa_ta,np_tl,log,gp_int,pro_sales,ts_ta,cc,ca_inv_re,ca_inv,EBITDA,stl,sa_co_ps,tc_ts]])
     print(prediction)
     return prediction


def main():
    st.title("Bankruptcy Prediction")
    np=st.text_input("Net profit/Total assets","Type here")
    tl=st.text_input("Total liabilities/Total assets","Type here")
    ebit=st.text_input("EBIT/Total assets","Type here")
    bookval=st.text_input("Book value of equity/Total liabilities","Type here")
    sales=st.text_input("Sales/Total assets","Type here")
    gp=st.text_input("(gross profit+extordinary items+financial expenses)/Total assets","Type here")
    dep=st.text_input("(gross profit+depreciation)/Sales","Type here")
    intrest=st.text_input("(gross profit+intrest)/Total assets","Type here")
    dp_tl=st.text_input("(gross profit+depreciation)/Total liabilities","Type here")
    ta_tl=st.text_input("Total assets/Total liabilities","Type here")
    gp_sal=st.text_input("gross profit/Sales","Type here")
    oa_ta=st.text_input("Profit on operating activities/Total assets","Type here")
    np_tl=st.text_input("(Net profit+depreciation)/Total liabilities","Type here")
    log=st.text_input("logarithm of total assets","Type here")
    gp_int=st.text_input("(Gross profit+intrest)/Sales","Type here")
    pro_sales=st.text_input("Profit on sales/Total assets","Type here")
    ts_ta=st.text_input("Total Sales/Total assets","Type here")
    cc=st.text_input("Constant capital/Total assets","Type here")
    ca_inv_re=st.text_input("(current assets-inventory-receivables)/Short-term-liabilities","Type here")
    ca_inv=st.text_input("(Current assets-inventory)/Short-term liabilities","Type here")
    EBITDA=st.text_input("EBITDA(profit on operating activities depreciation)/Sales","Type here")
    stl=st.text_input("Short-term liabilities/Total assets","Type here")
    sa_co_ps=st.text_input("(Sales-cost of product Sold)/Sales","Type here")
    tc_ts=st.text_input("Total cost/Total Sales","Type here")
  
    if st.button('predict'):
        result=predict_note(np,tl,ebit,bookval,sales,gp,dep,intrest,dp_tl,ta_tl,gp_sal,oa_ta,np_tl,log,gp_int,pro_sales,ts_ta,cc,ca_inv_re,ca_inv,EBITDA,stl,sa_co_ps,tc_ts)
        st.success('predicted{}'.format(result))
        if result==0:
            b_result='<p><b>No Bankruptcy</b></p>'
            st.markdown(b_result,unsafe_allow_html=True)
        else:
            b_result='<p><b>Bankruptcy</b></p>'
            st.markdown(b_result,unsafe_allow_html=True)
       




if __name__=='__main__':
    main()